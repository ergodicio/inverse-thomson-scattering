function OmegaGUI()
    %Launches and controls the GUI for singlefitting
%% Global variables
autoc=[.94 .94 .94];

%% Add paths
addpath(genpath('..'))
%% GUI text and interactables

% Create the GUI figure window
f = figure(...
    'Position',[300 300 500 550],...
    'Name','Thomson Data Fitter',...
    'NumberTitle','Off',...
    'Color', autoc);
movegui(f,'center')

% Create the 'shotnumber' text and input box
uicontrol(f,...
    'Style', 'Text',...
    'String','Shot Number',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 522 80 20]);

shotnumbox=uicontrol(f,...
    'Style', 'edit',...
    'String','101675',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 525 80 20]);

% Create time resolved vs space resolved button group
bgrestype = uibuttongroup(f,'Visible','on',...
    'BorderType', 'none',...
    'Units','pixels',...
    'Position',[240 522 200 20]);
              
%Create 2 radio buttons in the button group.
uicontrol(bgrestype,'Style','radiobutton',...
    'String','Streaked',...
    'Tag','x',...
    'Position',[5 5 60 20],...
    'BackgroundColor',autoc);
              
uicontrol(bgrestype,'Style','radiobutton',...
    'String','Imaging',...
    'Tag','y',...
    'Position',[75 5 60 20]);

% Create the 'bgackground shot' text and input box
uicontrol(f,...
    'Style', 'Text',...
    'String','Background Shot',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 492 100 20]);

bgshotnumbox=uicontrol(f,...
    'Style', 'edit',...
    'String','',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 495 80 20]);

% Create bg type button group
bgbgtype = uibuttongroup(f,'Visible','on',...
    'BorderType', 'none',...
    'Units','pixels',...
    'Position',[240 492 200 20]);
              
%Create 3 radio buttons in the button group.
uicontrol(bgbgtype,'Style','radiobutton',...
    'String','Shot',...
    'Tag','x',...
    'Position',[5 5 50 20],...
    'BackgroundColor',autoc);
              
uicontrol(bgbgtype,'Style','radiobutton',...
    'String','Fit',...
    'Tag','y',...
    'Position',[55 5 60 20]);

uicontrol(bgbgtype,'Style','radiobutton',...
    'String','N/A',...
    'value',1,...
    'Tag','z',...
    'Position',[105 5 80 20]);

% Create the 'Linout' text and input box
uicontrol(f,...
    'Style', 'Text',...
    'String','Lineout Location',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 462 160 20]);

boxlinout=uicontrol(f,...
    'Style', 'edit',...
    'String','500',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 465 80 20]);

% Create lineout options button group
bglineout = uibuttongroup(f,'Visible','on',...
    'BorderType', 'none',...
    'Units','pixels',...
    'Position',[240 462 200 20]);
              
%Create 3 radio buttons in the button group.
uicontrol(bglineout,'Style','radiobutton',...
    'String','ps',...
    'Tag','x',...
    'Position',[5 5 40 20],...
    'BackgroundColor',autoc);
              
uicontrol(bglineout,'Style','radiobutton',...
    'String',[char(hex2dec('03bc')) 'm'],...
    'Tag','y',...
    'Position',[45 5 60 20]);

uicontrol(bglineout,'Style','radiobutton',...
    'String','pixel',...
    'value',1,...
    'Tag','z',...
    'Position',[95 5 80 20]);

% Create the 'background' text and input box
uicontrol(f,...
    'Style', 'Text',...
    'String','Background Location',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 432 160 20]);

boxbg=uicontrol(f,...
    'Style', 'edit',...
    'String','900',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 435 80 20]);

% Create lineout options button group
bgbg = uibuttongroup(f,'Visible','on',...
    'BorderType', 'none',...
    'Units','pixels',...
    'Position',[240 432 200 20]);
              
%Create 3 radio buttons in the button group.
uicontrol(bgbg,'Style','radiobutton',...
    'String','ps',...
    'Tag','x',...
    'Position',[5 5 40 20],...
    'BackgroundColor',autoc);
              
uicontrol(bgbg,'Style','radiobutton',...
    'String',[char(hex2dec('03bc')) 'm'],...
    'Tag','y',...
    'Position',[45 5 60 20]);

uicontrol(bgbg,'Style','radiobutton',...
    'String','pixel',...
    'Tag','z',...
    'value',1,...
    'Position',[95 5 80 20]);

uicontrol(bgbg,'Style','radiobutton',...
    'String','auto',...
    'Tag','z',...
    'Position',[145 5 80 20]);

%% Fit Parameters
% Create the 'Fit Parameters' text
uicontrol(f,...
    'Style', 'Text',...
    'String','Electron Parameters',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'FontWeight','bold',...
    'Position',[30 390 160 20]);

% Create the wavelength option
uicontrol(f,...
    'Style', 'Text',...
    'String','Probe wavelength',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 370 90 20]);

toglam=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 350 80 20],...
    'Callback',@fitfix);

boxlam=uicontrol(f,...
    'Style', 'edit',...
    'String','526.5',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[30 330 80 20]);

uicontrol(f,...
    'Style', 'Text',...
    'String','nm',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[115 327 20 20]);

% Create the etemp option
uicontrol(f,...
    'Style', 'Text',...
    'String','Electron Temperature',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 370 110 20]);

togTe=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 350 80 20],...
    'Callback',@fitfix);

boxTe=uicontrol(f,...
    'Style', 'edit',...
    'String','.4',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 330 80 20]);

uicontrol(f,...
    'Style', 'Text',...
    'String','keV',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[235 327 25 20]);

% Create the densty option
uicontrol(f,...
    'Style', 'Text',...
    'String','Electron Density',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[270 370 90 20]);

togne=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[270 350 80 20],...
    'Callback',@fitfix);

boxne=uicontrol(f,...
    'Style', 'edit',...
    'String','.3',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[270 330 80 20]);

uicontrol(f,...
    'Style', 'Text',...
    'String','E20 cm^{-3}',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[355 327 25 40]);

% Create the m option
param2txt=uicontrol(f,...
    'Style', 'Text',...
    'String','m',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[390 370 90 20]);

togm=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[390 350 80 20],...
    'Callback',@fitfix);

boxm=uicontrol(f,...
    'Style', 'edit',...
    'String','3',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[390 330 80 20]);


%% Advanced Fit Parameters

togAdvanced=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Amplitudes',...
    'Value',1,...
    'Horizontalalignment','center',...
    'BackgroundColor',autoc,...
    'Position',[20 300 140 20],...
    'FontWeight','bold',...
    'Callback',@expand);

advPan=uipanel(f,...
    'Units','pixels',...
    'Visible','on',...
    'Position',[10,210,480,80]);
% Create the amp1 option
uicontrol(advPan,...
    'Style', 'Text',...
    'String','Amp 1',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 50 90 20]);

togamp1=uicontrol(advPan,...
    'Style', 'togglebutton',...
    'String','Fit',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 30 80 20],...
    'Callback',@fitfix);

boxamp1=uicontrol(advPan,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[20 10 80 20]);

% Create the amp2 option
uicontrol(advPan,...
    'Style', 'Text',...
    'String','Amp 2',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[140 50 110 20]);

togamp2=uicontrol(advPan,...
    'Style', 'togglebutton',...
    'String','Fit',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[140 30 80 20],...
    'Callback',@fitfix);

boxamp2=uicontrol(advPan,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[140 10 80 20]);

% Create the amp3 option
uicontrol(advPan,...
    'Style', 'Text',...
    'String','Amp 3(IAW)',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[260 50 110 20]);

togamp3=uicontrol(advPan,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Value',0,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[260 30 80 20],...
    'Callback',@fitfix);

boxamp3=uicontrol(advPan,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[260 10 80 20]);

% Create the BGamp option
uicontrol(advPan,...
    'Style', 'Text',...
    'String','Background Amp',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[380 50 110 20]);
%currently not actually fittable 1/9/22
togampbg=uicontrol(advPan,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Value',0,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[380 30 80 20],...
    'Callback',@fitfix);

boxampbg=uicontrol(advPan,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[380 10 80 20]);
%% Ion parameters
togmore=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Ion Parameters',...
    'Horizontalalignment','center',...
    'BackgroundColor',autoc,...
    'Position',[20 180 140 20],...
    'FontWeight','bold',...
    'Callback',@expand);

morPan=uipanel(f,...
    'Units','pixels',...
    'Visible','off',...
    'Position',[10,90,480,80]);
% Create the Ti option
uicontrol(morPan,...
    'Style', 'Text',...
    'String','Ion Temperature',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 50 90 20]);

togti=uicontrol(morPan,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 30 80 20],...
    'Callback',@fitfix);

boxti=uicontrol(morPan,...
    'Style', 'edit',...
    'String','.4',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[20 10 80 20]);

uicontrol(morPan,...
    'Style', 'Text',...
    'String','keV',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[105 7 25 20]);

% Create the Va option
uicontrol(morPan,...
    'Style', 'Text',...
    'String','Flow velocity (Va)',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[140 50 110 20]);

togva=uicontrol(morPan,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[140 30 80 20],...
    'Callback',@fitfix);

boxva=uicontrol(morPan,...
    'Style', 'edit',...
    'String','0',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[140 10 80 20]);

% Create the ud option
uicontrol(morPan,...
    'Style', 'Text',...
    'String','ud',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[260 50 90 20]);

togud=uicontrol(morPan,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[260 30 80 20],...
    'Callback',@fitfix);

boxud=uicontrol(morPan,...
    'Style', 'edit',...
    'String','0',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[260 10 80 20]);

% Create the Z option
uicontrol(morPan,...
    'Style', 'Text',...
    'String','Ionization (Z/A)',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[380 50 90 20]);

togZ=uicontrol(morPan,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[380 30 80 20],...
    'Callback',@fitfix);

boxZ=uicontrol(morPan,...
    'Style', 'edit',...
    'String','5',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[380 10 40 20]);

boxA=uicontrol(morPan,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[420 10 40 20]);

%% Distribution function parameters

togfepar=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','fe Parameters',...
    'Horizontalalignment','center',...
    'BackgroundColor',autoc,...
    'Visible','off',...
    'Position',[20 60 100 20],...
    'FontWeight','bold',...
    'Callback',@expandtog);

togfenum=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Numerical fe',...
    'Horizontalalignment','center',...
    'BackgroundColor',autoc,...
    'Visible','off',...
    'Position',[120 60 100 20],...
    'FontWeight','bold',...
    'Callback',@expandtog);

fePan=uipanel(f,...
    'Units','pixels',...
    'Visible','off',...
    'Position',[10,170,480,80]);

% Create the param4 option
uicontrol(fePan,...
    'Style', 'Text',...
    'String',['Parameter 4 (' char(948) '_T)'],...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 50 90 20]);

togparam4=uicontrol(fePan,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 30 80 20],...
    'Callback',@fitfix);

boxparam4=uicontrol(fePan,...
    'Style', 'edit',...
    'String','0',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[20 10 80 20]);

% Create the theta option
uicontrol(fePan,...
    'Style', 'Text',...
    'String','Heat flux polar angle',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[140 50 110 20]);

boxhftheta=uicontrol(fePan,...
    'Style', 'edit',...
    'String','0',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[140 10 80 20]);

% Create the phi option
uicontrol(fePan,...
    'Style', 'Text',...
    'String','Heat flux azimuth',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[260 50 110 20]);

boxhfphi=uicontrol(fePan,...
    'Style', 'edit',...
    'String','0',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[260 10 80 20]);

% Create the df type option
uicontrol(fePan,...
    'Style', 'Text',...
    'String','DF Type',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[380 50 90 20]);

boxdfType=uicontrol(fePan,...
    'Style', 'edit',...
    'String','DLM',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[380 10 80 20]);



%% Add numerical distribution
%This section is largely depreciated but my be neccessary later for SNB
%calculation
numPan=uipanel(f,...
    'Units','pixels',...
    'Visible','off',...
    'Position',[10,170,480,80]);

%file location
uicontrol(numPan,...
    'Style', 'Text',...
    'String','Numerical distribution function',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 50 200 20]);

%Box for file location
boxdffile=uicontrol(numPan,...
    'Style', 'edit',...
    'String',[],...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Max',2,...
    'Position',[20 10 260 40]);

%Browse Button
uicontrol(numPan,...
    'Style', 'pushbutton',...
    'String','Browse',...
    'Horizontalalignment','left',...
    'Position',[285 15 80 25],...
    'Callback',@openfolder2);


%Plot only numerical distribution
uicontrol(numPan,...
    'Style', 'Text',...
    'String',{'Plot only numerical', 'distribution'},...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',autoc,...
    'Position',[380 40 120 30]);

%Plot only numerical distribution
%Currently removed from opperation left for use when SNB is done 1/9/22
chbxfit=uicontrol(numPan,...
    'Style', 'checkbox',...
    'String',[],...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',autoc,...
    'Max',2,...
    'Position',[360 50 15 15]);

% Create 1D 3D options button group
dimbg = uibuttongroup(numPan,'Visible','on',...
    'BorderType', 'none',...
    'Units','pixels',...
    'Position',[380 15 200 20]);
              
%Create 3 radio buttons in the button group.
uicontrol(dimbg,'Style','radiobutton',...
    'String','1D',...
    'Tag','3D',...
    'Position',[5 5 40 20],...
    'BackgroundColor',autoc);
              
uicontrol(dimbg,'Style','radiobutton',...
    'String','3D',...
    'Tag','3D',...
    'Position',[45 5 60 20]);


%% create checkboxes for spectral types
iawchk=uicontrol(f,...
    'Style', 'checkbox',...
    'String','IAW',...
    'Value',0,...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',autoc,...
    'Position',[380 25 100 30]);

epwbchk=uicontrol(f,...
    'Style', 'checkbox',...
    'String','EPW Blue',...
    'Value',1,...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',autoc,...
    'Position',[380 55 100 30]);

epwrchk=uicontrol(f,...
    'Style', 'checkbox',...
    'String','EPW Red',...
    'Value',1,...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',autoc,...
    'Position',[380 85 100 30]);
%% Run

%file location
uicontrol(f,...
    'Style', 'Text',...
    'String','Result file to edit',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 90 200 20]);

%Box for file location
boxresfile=uicontrol(f,...
    'Style', 'edit',...
    'String',[],...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Max',2,...
    'Position',[20 70 260 25]);

%Browse Button
uicontrol(f,...
    'Style', 'pushbutton',...
    'String','Browse',...
    'Horizontalalignment','left',...
    'Position',[285 70 80 25],...
    'Callback',@openfolder1);

% Create 'Run' button
runbutton=uicontrol(f,...
    'Style', 'pushbutton',...
    'String','Run',...
    'Horizontalalignment','left',...
    'Position',[150 15 100 50],...
    'Callback',@runprog);

%% GUI Functions

%Open results folder when Browse button is pushed
    function openfolder1(~,~)
        filename=uigetfile('.\Results\*.mat','MultiSelect','off');
        set(boxresfile,'String',filename);
    end
    function openfolder2(~,~)
        [filename,path]=uigetfile('.\Results\*.txt','MultiSelect','off');
        set(boxdffile,'String',filename,'UserData',[path filename]);
    end

%Flip toggle text from fixed to fit when pressed

    function fitfix(source,~)
        button_state = get(source,'Value');
        if button_state == get(source,'Max')
            set(source,'String','Fit');
        elseif button_state == get(source,'Min')
            set(source,'String','Fixed');
        end
    end

%expands the gui for the additional buttons
    function expand(source,~)
        fig=gcf;
        cursize=get(fig,'Position');
        button_state = get(source,'Value');
        if button_state == get(source,'Max')
            exsize=100;
            vis='on';
        elseif button_state == get(source,'Min')
            exsize=-100;
            vis='off';
        end
        
        set(fig,'Position',cursize+[0 -exsize 0 exsize])
        
        if source==togAdvanced
            set(advPan,'Visible',vis);
            set(togmore,'Visible',vis);
        end
        if source==togmore
            set(morPan,'Visible',vis);
            if strcmp(vis,'on')
                set(param2txt,'String','Parameter 2');
            else
                set(param2txt,'String','m');
            end
            set(togfepar,'Visible',vis);
            set(togfenum,'Visible',vis);
        end
        
        for i=10:length(fig.Children)
            fig.Children(i).Position=fig.Children(i).Position+[0 exsize 0 0];
        end

    end

function expandtog(source,~)
        fig=gcf;
        cursize=get(fig,'Position');

        button_state = get(source,'Value');
        
        if button_state == get(source,'Max')
            if strcmp(fePan.Visible,'off') && strcmp(numPan.Visible,'off')
                exsize=100;
            else
                exsize=0;
            end
            vis='on';
            opvis='off';
        elseif button_state == get(source,'Min')
            exsize=-100;
            vis='off';
            opvis='off';
        end
        
        set(fig,'Position',cursize+[0 -exsize 0 exsize])
        
        for i=10:length(fig.Children)
            fig.Children(i).Position=fig.Children(i).Position+[0 exsize 0 0];
        end
        
        if source==togfepar
            set(fePan,'Visible',vis);
            set(numPan,'Visible',opvis);
            set(togfenum,'Value',0);
        end
        if source==togfenum
            set(fePan,'Visible',opvis);
            set(numPan,'Visible',vis);
            set(togfepar,'Value',0);
        end

    end
%% Run Fit code
    function runprog(source,~)
        set(source,'String','Running...')
        set(source,'Enable','off')
        drawnow;
        
        bgshot.val=str2double(bgshotnumbox.String);
        bgshot.type=bgbgtype.SelectedObject.String;
        
        lnout.val=str2double(boxlinout.String);
        lnout.type=bglineout.SelectedObject.String;
        
        bglnout.val=str2double(boxbg.String);
        bglnout.type=bgbg.SelectedObject.String;


        TSinputs=ThomsonInputs(toglam,boxlam,togne,boxne,togTe,boxTe,...
            togm,boxm,togamp1,boxamp1,togamp2,boxamp2,togZ,boxZ);
        
        TSinputs.fe.Type=boxdfType.String;
        TSinputs.fe.theta=[0 6.22]; %range of beta sent to ApproxThomson
        TSinputs.fe.delT=str2double(boxparam4.String);
        TSinputs.fe.thetaphi=[str2double(boxhftheta.String) str2double(boxhfphi.String)];

                %Currently ThomsonInputs does not handle IAWs this will be added
        %later
%         if togamp3.Value
%             x0.amp3=str2double(boxamp3.String);
%         end
%         if togti.Value
%             x0.Ti=str2double(boxti.String);
%         else
%             Ti=str2double(boxti.String);
%         end
%         if togva.Value
%             x0.Va=str2double(boxva.String);
%         else
%             Va=str2double(boxva.String);
%         end
%         if togud.Value
%             x0.ud=str2double(boxud.String);
%         else
%             ud=str2double(boxud.String);
%         end
%         if togparam4.Value
%             x0.param4=str2double(boxparam4.String);
%         end
% 
%         A=str2double(boxA.String);

        extraoptions.fitspecs=[iawchk.Value epwbchk.Value epwrchk.Value];
        extraoptions.spectype=bgrestype.SelectedObject.String;
        
        %Preform fit
        try
            resnew=OmegaDataFitter(str2double(shotnumbox.String),bgshot,...
                lnout,bglnout,str2double(boxampbg.String),3,TSinputs,...
                extraoptions);

            %Save fit result
            if ~isempty(boxresfile.String) && ~strcmp(boxresfile.String,'0')
                load(boxresfile.String,'result')
                result.res(lnout.val)=resnew.res;
                save(boxresfile.String,'result')
            end
            assignin('base','resnew',resnew);
        
        catch ME
            disp('fit was not able to run')
            ME.getReport
        end

        
        %for debugging
        try
        %Add numeric distribution function spectrum 
        %has not been tested or updated to new architecture 1/9/22
        if ~isempty(boxdffile.String) && ~strcmp(boxdffile.String,'0')
            %This is designed to work specificaly with the current output
            %format of K2, if any changes are made it will need to be
            %generalized
            wionization=0;
            if wionization
                %these lines are for the output of K2+ionization
                fileID=fopen(boxdffile.UserData,'r'); 
                fgetl(fileID);
                dist=fscanf(fileID,'%f',[2 Inf]);
                dftable=table(dist(1,:)',dist(2,:)','VariableNames',{'x','f0av'});
                f0=dftable.f0av;
            else
                dftable=readtable(boxdffile.UserData);
                %Pre 4/8/22
                %f0=dftable.f0av;
                %New code to work with Jeffery's simulations
                f0=dftable.f0;
                
            end
                
            
            %dftable.x=dist(1,:);
            %dftable.f0av=dist(2,:);
            %f0=dftable.f0;
            
            if ismember('v',dftable.Properties.VariableNames)
                v=dftable.v*100;%convert from m/s to cm/s
                C=2.99792458e10;
                Me=510.9896/C^2;
                vnorm=v/sqrt(str2double(boxTe.String)/Me);
            else
                %Pre 4/8/22
                %vnorm=dftable.x;
                %New code to work with Jeffery's simulations
                vnorm=dftable.v_vt;
            end
            
            %temporary comment during debuging 4/8/22
%             if strcmp(dimbg.SelectedObject.String,'3D')
%                 %convert distribution function to 1D
%                 [f0_1D,vnorm1d]=To1Ddist(f0,vnorm);
%             else
%                 f0_1D=f0;
%             end
%             inputStruc.curDist=[vnorm1d f0_1D'];
%             inputStruc.distTable=[];
%             x0num=x0;
%             if isfield(x0num,'m')
%                 x0num=rmfield(x0num,'m');
%             end
            
            %Pre 4/8/22
            %resNumeric=ThomsonFitter(data,x0num,inputStruc);
            %New code to work with Jeffery's simulations
            %Currently the txt file has all radii one after the other
            %Assuming they are all the same length...
            [feleng]=find(dftable.x~=dftable.x(1),1,'first');
            feleng=feleng-1;
            segnum=140;%1; %spatial segment to use
            segnum=segnum-1;
            disp(['Current radius ' num2str(dftable.x((segnum*feleng)+1))])
           
            f0=f0((segnum*feleng)+1:(segnum*feleng)+feleng);
            %f0=[flipud(f0); f0];
            %add f1
            f1=dftable.f1((segnum*feleng)+1:(segnum*feleng)+feleng);
            %f1=[-flipud(f1); f1];
            %f0=f0+f1;
            vnorm=vnorm((segnum*feleng)+1:(segnum*feleng)+feleng);
            %vnorm=[-flipud(vnorm); vnorm];
            [f1D,vnorm1D]=To1Ddistaniso(f0,f1,vnorm);
           

            TSinputs.fe.Type='Numeric';
            TSinputs.fe.Value=f1D;
            TSinputs.fe.Length=length(f0);
            TSinputs.fe.vnorm=vnorm1D;
            TSinputs.m.Active=0;
            %TSinputs.fe.theta=[0 6.22]; %range of beta sent to ApproxThomson
            %TSinputs.fe.delT=str2double(boxparam4.String);
            %TSinputs.fe.thetaphi=[str2double(boxhftheta.String) str2double(boxhfphi.String)];
        
            resNumeric=OmegaDataFitter(str2double(shotnumbox.String),bgshot,...
                lnout,bglnout,str2double(boxampbg.String),3,TSinputs,...
                extraoptions);
            
            assignin('base','resNumeric',resNumeric);
        end
        catch ME
            %disp('fit was not able to run')
            ME.getReport
        end
        set(source,'String','Run')
        set(source,'Enable','on')
    end

%% Convert distribution function to 1D
    function [f1D,v1D]=To1Ddist(f0,v)
        v1D=[-flipud(v); v];
        f3D=@(vr,vz)2*pi*vr.*interpn(v,f0,sqrt(vr.^2+vz.^2),'linear',0);
        parfor i=1:length(v1D)
            f1D(i)=integral(@(vr)f3D(vr,v1D(i)),0,Inf,'ArrayValued',1);
        end
        f1Dnorm=trapz(v1D,f1D);
        f1D=bsxfun(@rdivide,f1D,f1Dnorm);
    end
    function [f1D,v1D]=To1Ddistaniso(f0,f1,v)
        v1D=[-flipud(v); v];
        theta=0:10^-1.2018:2*pi;
        f3D=@(vr,vz)2*pi*vr.*interpn(v,f0,sqrt(vr.^2+vz.^2),'linear',0)+cos(theta)...
            .*(vz./sqrt(vr.^2+vz.^2)).*interpn(v,f1,sqrt(vr.^2+vz.^2),'linear',0);
        parfor i=1:length(v1D)
            f1D(i,:)=integral(@(vr)f3D(vr,v1D(i)),0,Inf,'ArrayValued',1);
        end
        f1Dnorm=trapz(v1D,f1D);
        f1D=bsxfun(@rdivide,f1D,f1Dnorm);
    end
end