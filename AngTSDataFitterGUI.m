function resnew=AngTSDataFitterGUI()
%% Global variables
autoc=[.94 .94 .94];

%% Add paths
curdir=pwd;
addpath(genpath(curdir(1:strfind(curdir,'Thomson Code')+11)))
%% GUI text and interactables

% Create the GUI figure window
f = figure(...
    'Position',[300 300 500 700],...
    'Name','Artemis Data Fitter',...
    'NumberTitle','Off',...
    'Color', autoc);
movegui(f,'center')

% Create the 'shotnumber' text and input box
uicontrol(f,...
    'Style', 'Text',...
    'String','Shot Number',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 672 80 20]);

shotnumbox=uicontrol(f,...
    'Style', 'edit',...
    'String','94481',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 675 80 20]);

% Create the 'Linout' text and input box
%This is an option to show lineouts of the fit and data
uicontrol(f,...
    'Style', 'Text',...
    'String','Lineout Locations',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 642 160 20]);

boxlinout=uicontrol(f,...
    'Style', 'edit',...
    'String','400, 600, 800',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 645 80 20]);

% Create lineout options button group
bglineout = uibuttongroup(f,'Visible','on',...
    'BorderType', 'none',...
    'Units','pixels',...
    'Position',[240 642 200 20]);
              
%Create 2 radio buttons in the button group.
uicontrol(bglineout,'Style','radiobutton',...
    'String','on',...
    'Tag','x',...
    'Position',[5 5 40 20],...
    'BackgroundColor',autoc);
              
uicontrol(bglineout,'Style','radiobutton',...
    'String','off',...
    'value',1,...
    'Tag','y',...
    'Position',[45 5 60 20]);

% Create the 'background' text and input box
uicontrol(f,...
    'Style', 'Text',...
    'String',['Background ' ; 'Shot Number'],...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 607 160 30]);

boxbg=uicontrol(f,...
    'Style', 'edit',...
    'String','94483',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 615 80 20]);

%% Fit Parameters
% Create the 'Fit Parameters' text
uicontrol(f,...
    'Style', 'Text',...
    'String','Fit Parameters',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'FontWeight','bold',...
    'Position',[30 570 160 20]);

% Create the wavelength option
uicontrol(f,...
    'Style', 'Text',...
    'String','Probe wavelength',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 550 90 20]);

toglam=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 530 80 20],...
    'Callback',@fitfix);

boxlam=uicontrol(f,...
    'Style', 'edit',...
    'String','526.5',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[30 510 80 20]);

uicontrol(f,...
    'Style', 'Text',...
    'String','nm',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[115 507 20 20]);

% Create the etemp option
uicontrol(f,...
    'Style', 'Text',...
    'String','Electron Temperature',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 550 110 20]);

togTe=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fit',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 530 80 20],...
    'Callback',@fitfix);

boxTe=uicontrol(f,...
    'Style', 'edit',...
    'String','1.2',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 510 80 20]);

uicontrol(f,...
    'Style', 'Text',...
    'String','keV',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[235 507 25 20]);

% Create the densty option
uicontrol(f,...
    'Style', 'Text',...
    'String','Electron Density',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[270 550 90 20]);

togne=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fit',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[270 530 80 20],...
    'Callback',@fitfix);

boxne=uicontrol(f,...
    'Style', 'edit',...
    'String','.4',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[270 510 80 20]);

uicontrol(f,...
    'Style', 'Text',...
    'String','E20 cm^{-3}',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[355 507 25 40]);

% Create the m option
uicontrol(f,...
    'Style', 'Text',...
    'String','m',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[390 550 90 20]);

togm=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fit',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[390 530 80 20],...
    'Callback',@fitfix);

boxm=uicontrol(f,...
    'Style', 'edit',...
    'String','4',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[390 510 80 20]);
%% Line 2

% Create the amp1 option
uicontrol(f,...
    'Style', 'Text',...
    'String','Amp 1',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 470 90 20]);

togamp1=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fit',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 450 80 20],...
    'Callback',@fitfix);

boxamp1=uicontrol(f,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[30 430 80 20]);

% Create the amp2 option
uicontrol(f,...
    'Style', 'Text',...
    'String','Amp 2',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 470 110 20]);

togamp2=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Value',0,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 450 80 20],...
    'Callback',@fitfix);

boxamp2=uicontrol(f,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 430 80 20]);

% Create the Z option
uicontrol(f,...
    'Style', 'Text',...
    'String','Ionization (Z/A)',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[270 470 90 20]);

togZ=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[270 450 80 20],...
    'Callback',@fitfix);

boxZ=uicontrol(f,...
    'Style', 'edit',...
    'String','20',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[270 430 40 20]);

boxA=uicontrol(f,...
    'Style', 'edit',...
    'String','83.8',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[310 430 40 20]);

%% Line 3
% Create the Starting distribntuion function option
uicontrol(f,...
    'Style', 'Text',...
    'String','Fit Arbitrary Distribution',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 380 100 30]);

togfitarb=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fit',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 360 80 20],...
    'Callback',@fitfix);

% Create the Starting distribntuion function option
uicontrol(f,...
    'Style', 'Text',...
    'String','Starting Distribution function',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 380 100 30]);

boxstartfe=uicontrol(f,...
    'Style', 'edit',...
    'String','DLM',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 360 80 20]);

% Create the Starting distribntuion function option
uicontrol(f,...
    'Style', 'Text',...
    'String','Number of distribution function points/ Max refinement',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[270 380 140 30]);

boxfepoints=uicontrol(f,...
    'Style', 'edit',...
    'String','8',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[270 360 40 20]);

boxfemax=uicontrol(f,...
    'Style', 'edit',...
    'String','60',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[310 360 40 20]);

%% Line 4 nonstandard/temporary options

% Create the blur option
uicontrol(f,...
    'Style', 'Text',...
    'String','Additional spectral blur',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 310 90 30]);

togblur=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Value',0,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 290 80 20],...
    'Callback',@fitfix);

boxblur=uicontrol(f,...
    'Style', 'edit',...
    'String','.1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[30 270 80 20]);

% Create the Spectral curvature option
uicontrol(f,...
    'Style', 'Text',...
    'String','Spectral curvature',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 310 110 20]);

togspeccurve=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','Fixed',...
    'Value',0,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 290 80 20],...
    'Callback',@fitfix);

boxspeccurve=uicontrol(f,...
    'Style', 'edit',...
    'String','1',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 270 80 20]);

%% Line 5 gradients

% Create the Te gradient option
uicontrol(f,...
    'Style', 'Text',...
    'String','Electron Temp gradient (%)',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 230 100 30]);

togTegrad=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','On',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[30 210 80 20],...
    'Callback',@onoff);

boxTegrad=uicontrol(f,...
    'Style', 'edit',...
    'String','5',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[30 190 80 20]);

% Create the ne gradient option
uicontrol(f,...
    'Style', 'Text',...
    'String','Electron density gradient (%)',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 230 110 30]);

tognegrad=uicontrol(f,...
    'Style', 'togglebutton',...
    'String','On',...
    'Value',1,...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[150 210 80 20],...
    'Callback',@onoff);

boxnegrad=uicontrol(f,...
    'Style', 'edit',...
    'String','12',...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Position',[150 190 80 20]);
%% Add numerical distribution
%file location
uicontrol(f,...
    'Style', 'Text',...
    'String','Numerical distribution function',...
    'Horizontalalignment','left',...
    'BackgroundColor',autoc,...
    'Position',[20 150 200 20]);

%Box for file location
boxdffile=uicontrol(f,...
    'Style', 'edit',...
    'String',[],...
    'Horizontalalignment','left',...
    'ForegroundColor',[0 0 0],...
    'BackgroundColor',[1 1 1],...
    'Max',2,...
    'Position',[20 110 260 40]);

%Browse Button
uicontrol(f,...
    'Style', 'pushbutton',...
    'String','Browse',...
    'Horizontalalignment','left',...
    'Position',[285 115 80 25],...
    'Callback',@openfolder2);


% %Plot only numerical distribution
% uicontrol(f,...
%     'Style', 'Text',...
%     'String',{'Plot only', 'numerical', 'distribution'},...
%     'Horizontalalignment','left',...
%     'ForegroundColor',[0 0 0],...
%     'BackgroundColor',autoc,...
%     'Position',[400 215 100 40]);
% 
% %Plot only numerical distribution
% chbxfit=uicontrol(f,...
%     'Style', 'checkbox',...
%     'String',[],...
%     'Horizontalalignment','left',...
%     'ForegroundColor',[0 0 0],...
%     'BackgroundColor',autoc,...
%     'Max',2,...
%     'Position',[380 225 15 15]);
% 
% % Create 1D 3D options button group
% dimbg = uibuttongroup(f,'Visible','on',...
%     'BorderType', 'none',...
%     'Units','pixels',...
%     'Position',[380 185 200 20]);
%               
% %Create 3 radio buttons in the button group.
% uicontrol(dimbg,'Style','radiobutton',...
%     'String','1D',...
%     'Tag','3D',...
%     'Position',[5 5 40 20],...
%     'BackgroundColor',autoc);
%               
% uicontrol(dimbg,'Style','radiobutton',...
%     'String','3D',...
%     'Tag','3D',...
%     'Position',[45 5 60 20]);

%% Run

% %file location
% uicontrol(f,...
%     'Style', 'Text',...
%     'String','Result file to edit',...
%     'Horizontalalignment','left',...
%     'BackgroundColor',autoc,...
%     'Position',[20 140 200 20]);
% 
% %Box for file location
% boxresfile=uicontrol(f,...
%     'Style', 'edit',...
%     'String',[],...
%     'Horizontalalignment','left',...
%     'ForegroundColor',[0 0 0],...
%     'BackgroundColor',[1 1 1],...
%     'Max',2,...
%     'Position',[20 100 260 40]);
% 
% %Browse Button
% uicontrol(f,...
%     'Style', 'pushbutton',...
%     'String','Browse',...
%     'Horizontalalignment','left',...
%     'Position',[285 105 80 25],...
%     'Callback',@openfolder1);

% Create 'Run' button
uicontrol(f,...
    'Style', 'pushbutton',...
    'String','Run',...
    'Horizontalalignment','left',...
    'Position',[150 20 100 50],...
    'Callback',@runprog);

% Create 'Refine' button
uicontrol(f,...
    'Style', 'pushbutton',...
    'String','Refine',...
    'Horizontalalignment','left',...
    'Position',[250 20 100 50],...
    'Callback',@refineRun);

%% GUI Functions

%Open results folder when Browse button is pushed
    function openfolder1(~,~)
        filename=uigetfile('.\Results\*.mat','MultiSelect','off');
        set(boxresfile,'String',filename);
    end
    function openfolder2(~,~)
        folderloc='\\HOPI-FS\shares\Profiles\amild\My Documents\ARTEMIS\code progress images';
        [filename,path]=uigetfile([folderloc '\*.mat'],'MultiSelect','off');
        set(boxdffile,'String',filename,'UserData',[path filename]);
    end

%Flip toggle text from fixed to fit when pressed

    function fitfix(source,~)
        button_state = get(source,'Value');
        if button_state == get(source,'Max')
            set(source,'String','Fit');
        elseif button_state == get(source,'Min')
            set(source,'String','Fixed');
        end
    end

%Flip toggle text from on to off when pressed

    function onoff(source,~)
        button_state = get(source,'Value');
        if button_state == get(source,'Max')
            set(source,'String','On');
        elseif button_state == get(source,'Min')
            set(source,'String','Off');
        end
    end

%% Run Fit code
    function runprog(source,~)
        set(source,'String','Running...')
        set(source,'Enable','off')
        drawnow;
       
        lnout.val=str2double(boxlinout.String);
        lnout.type=bglineout.SelectedObject.String;

        ARTSinputs=ThomsonInputs(toglam,boxlam,togne,boxne,togTe,boxTe,...
            togm,boxm,togamp1,boxamp1,togamp2,boxamp2,togZ,boxZ,...
            togfitarb,boxfepoints,boxstartfe);
        
        ARTSinputs=addAdditional(ARTSinputs);
        
        if ~isempty(boxdffile.String) && ~strcmp(boxdffile.String,'0')
            %loads the numerical input data and retypes it so the original
            %variable name is remove (this means the variable does not have
            %to be names resnew for it to work)
            numInp=load(boxdffile.UserData);
            numInp=struct2cell(numInp);
            numInp=numInp{1};
            ARTSinputs=set2numericInput(ARTSinputs,numInp);
        end
        resnew=AngTSDataFitter(str2double(shotnumbox.String),...
            str2double(boxbg.String),str2num(boxlinout.String),ARTSinputs);

        assignin('base','resnew',resnew);

        set(source,'String','Run')
        set(source,'Enable','on')
    end

    function refineRun(source,~)
        %repeatedly run using increasing number of distribution function
        %points, if a run has already been preformed (ie there is a resnew)
        %it will start with that previos run
        curdistlength=0;
        
        set(source,'String','Busy...')
        set(source,'Enable','off')
        drawnow;
        
        try
            resnew=evalin('base','resnew');
        end
        
        while curdistlength<str2double(boxfemax.String)
            
            ARTSinputs=ThomsonInputs(toglam,boxlam,togne,boxne,togTe,...
                boxTe,togm,boxm,togamp1,boxamp1,togamp2,boxamp2,togZ,...
                boxZ,togfitarb,boxfepoints,boxstartfe);
            
            ARTSinputs=addAdditional(ARTSinputs);
            
            curdistlength=ARTSinputs.fe.Length;

            if exist('resnew','var') && isobject(resnew)
                if sameActiveState(ARTSinputs,resnew)

                    ARTSinputs=resnew;
                    ARTSinputs.fe.Value=interp1(ARTSinputs.fe.Value,...
                        linspace(1,ARTSinputs.fe.Length,2*ARTSinputs.fe.Length));
                    ARTSinputs.fe.Length=2*ARTSinputs.fe.Length;
                    ARTSinputs.fe.Bounds=repmat(ARTSinputs.fe.Bounds,1,2);
                    set(boxfepoints,'String',num2str(ARTSinputs.fe.Length))
                    curdistlength=ARTSinputs.fe.Length;
                end
            end

            %Preform fit
            resnew=AngTSDataFitter(str2double(shotnumbox.String),...
                str2double(boxbg.String),str2num(boxlinout.String),ARTSinputs);
            
            curfe=exp(resnew.fe.Value);
            netrue=resnew.ne.Value*2*trapz(linspace(0,7,ARTSinputs.fe.Length),curfe);
            curfe=curfe/(2*trapz(linspace(0,7,ARTSinputs.fe.Length),curfe));
            Tetrue=resnew.Te.Value*2*trapz(linspace(0,7,ARTSinputs.fe.Length),...
                (linspace(0,7,ARTSinputs.fe.Length)).^2 .*curfe);
            corrresnew=resnew;

            corrresnew.Te.Value=Tetrue;
            corrresnew.ne.Value=netrue;
            corrresnew.fe.Value=curfe;

            assignin('base','resnew',resnew);
            assignin('base','corres',corrresnew);
            
            %save all images and data structures to hopi-fs
            folderloc='\\HOPI-FS\shares\Profiles\amild\My Documents\ARTEMIS\code progress images';
            foldername=['Shot ' shotnumbox.String];
            mkdir(folderloc, foldername)
            currun=log2(ARTSinputs.fe.Length)-2;
            linouts=str2num(boxlinout.String);
            for i=1:length(linouts)
                fh = findobj('Type', 'Figure','Name', ['Lineout ' num2str(i)]);
                savefig(fh,[folderloc filesep foldername '\lineout ' ...
                    num2str(linouts(i)) ' run ' num2str(currun)]);
                close(fh)
            end
            
            fh = findobj( 'Type', 'Figure', 'Name', 'Final Difference' );
            savefig(fh,[folderloc filesep foldername '\run ' ...
                num2str(currun) 'final diff ']);
            close(fh)
            
            fh = findobj( 'Type', 'Figure', 'Name', 'Final Spectrum' );
            savefig(fh,[folderloc filesep foldername '\run ' ...
                num2str(currun) 'final spec ']);
            close(fh)
            
            fh = findobj( 'Type', 'Figure', 'Name', 'Initial Difference' );
            savefig(fh,[folderloc filesep foldername '\run ' ...
                num2str(currun) 'init diff ']);
            close(fh)
            
            fh = findobj( 'Type', 'Figure', 'Name', 'Initial Spectrum' );
            savefig(fh,[folderloc filesep foldername '\run ' ...
                num2str(currun) 'init spec ']);
            close(fh)
            
            fh = findobj( 'Type', 'Figure', 'Name', 'Data' );
            savefig(fh,[folderloc filesep foldername '\data']);
            close(fh)
            
            save([folderloc filesep foldername '\run ' ...
                num2str(currun) 'result'], 'resnew');
            save([folderloc filesep foldername '\run ' ...
                num2str(currun) 'result normalized'], 'corrresnew');
        end
        set(source,'String','Refine')
        set(source,'Enable','on')
    end

    function obj=addAdditional(obj)
        obj=obj.addBlur(togblur.Value,str2double(boxblur.String));
        obj=obj.addCurvature(togspeccurve.Value,str2double(boxspeccurve.String));
        obj=obj.addGradients(togTegrad.Value,str2double(boxTegrad.String),...
            tognegrad.Value,str2double(boxnegrad.String));
    end
    function obj=set2numericInput(obj,numInp)
        props=properties(obj);
        for i=1:length(props)
            try
                obj.(props{i}).Value=numInp.(props{i}).Value;
                if isfield(numInp.(props{i}),'gradient')
                    obj.(props{i}).gradient=numInp.(props{i}).gradient;
                end
            catch
                warning(['Property ' props{i} ' not found in numerical input'...
                    ', GUI input used'])
            end
        end

    end
end